name: Esegui Script Python per Aggiornare Dati EPG

on:
  schedule:
    # Esegui alle 22:00 UTC per ottenere i dati di ieri (00:00 ora italiana estate)
    # Esegui alle 23:00 UTC per ottenere i dati di ieri (00:00 ora italiana inverno)
    - cron: '0 23 * * *'  # Esegui ogni giorno alle 22:00 UTC (mezzanotte ora italiana)

    # Esegui alle 04:00 UTC per ottenere i dati di oggi (06:00 ora italiana estate)
    # Esegui alle 05:00 UTC per ottenere i dati di oggi (06:00 ora italiana inverno)
    - cron: '0 5 * * *'  # Esegui ogni giorno alle 04:00 UTC (06:00 ora italiana)

  push:
    branches:
      - main  # Trigger quando fai push sul branch main

jobs:
  update-dati:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout del codice dal repository
    - name: Checkout codice
      uses: actions/checkout@v2

    # 2. Impostare Python
    - name: Impostare Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Usa la versione pi√π recente di Python 3

    # 3. Installazione delle dipendenze
    - name: Installare dipendenze
      run: |
        python -m pip install --upgrade pip  # Aggiorna pip
        pip install -r requirements.txt  # Installa le dipendenze (se il file esiste)

    # 4. Esegui lo script di scraping
    - name: Esegui il codice di scraping
      run: |
        current_time=$(date -u +"%H")  # Ottieni l'ora corrente in UTC
        if [ "$current_time" -eq 23 ]; then
          echo "Esecuzione dello scraping per ieri"
          python scraping.py --data-ieri
        elif [ "$current_time" -eq 5 ]; then
          echo "Esecuzione dello scraping per oggi"
          python scraping.py --data-oggi
        else
          echo "Orario non valido per lo scraping. Attendi il prossimo cron."
          exit 1
        fi  # Chiude il blocco if


    # 5. Debug per verificare modifiche
    - name: Verifica stato repository
      run: |
        echo "Stato del repository:"
        git status
        echo "Differenze rispetto al commit precedente:"
        git diff

    # 6. Aggiungi e Pusha il risultato
    - name: Aggiungi e Pusha il risultato
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add dati_programmi.json
        git commit -m "Aggiorna i dati EPG" --allow-empty || echo "Nessuna modifica da commettere"
        git push

    # 7. Debug finale (opzionale, per verificare il successo del push)
    - name: Verifica aggiornamento branch
      run: |
        echo "Verifica finale:"
        git log -1 --pretty=format:"%h %s"
